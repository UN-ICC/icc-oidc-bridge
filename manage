#!/bin/bash

# Docker
export COMPOSE_PROJECT_NAME="oidc-bridge"

# database
export POSTGRESQL_DATABASE="OIDC"
export POSTGRESQL_USER="DB_USER"
export POSTGRESQL_PASSWORD="DB_PASSWORD"
export EXPOSED_DATABASE_SERVICE_PORT=5433


# oidc-django
export DJANGO_SETTINGS_MODULE=oidc_controller.settings.local
# Update webhook link below to match ngrok port 5000 URL
export IDENTITY_SERVER_URL="${IDENTITY_SERVER_URL:-https://676706e6c7d2.ngrok.io/webhooks}"
export IDENTITY_SERVER_API_KEY=""
export IDENTITY_SERVER_WEB_HOOK_URL=${IDENTITY_SERVER_URL}
export SECRET_KEY="&(*grsdhgkfds87s8sd88sfasfasflk781asd.xdfjsafudgd"

# Update webhook link below to match ngrok port 5000 URL
export SITE_URL="https://676706e6c7d2.ngrok.io"
export DEBUG=True

# aca-py
export GENESIS_URL="https://raw.githubusercontent.com/sovrin-foundation/sovrin/stable/sovrin/pool_transactions_sandbox_genesis"
export AGENT_NAME="oidc-controller-agent"
export AGENT_HTTP_PORT="5679"
export AGENT_ADMIN_PORT="5678"
export AGENT_ENDPOINT=${AGENT_ENDPOINT:-http://$DOCKERHOST:$AGENT_HTTP_PORT}
export ACAPY_ADMIN_URL="http://aca-py:${AGENT_ADMIN_PORT}"
export ACAPY_AGENT_URL="${AGENT_ENDPOINT:-http://aca-py:$AGENT_HTTP_PORT}"
export AGENT_SEED="000000000000000000000000Steward1"
export ACAPY_ADMIN_URL_API_KEY=${ACAPY_ADMIN_URL_API_KEY}
export ACAPY_ADMIN_MODE="admin-insecure-mode"
export WALLET_ENCRYPTION_KEY="key123"

if [ ! -z "${ACAPY_ADMIN_URL_API_KEY}" ]; then
  ACAPY_ADMIN_MODE="admin-api-key ${ACAPY_ADMIN_URL_API_KEY}"
fi

start() {
    docker-compose build
    docker-compose -p ${COMPOSE_PROJECT_NAME} up -d
    docker-compose logs -f
}
stop() {
    docker-compose -p ${COMPOSE_PROJECT_NAME} stop
}

usage() {
    echo "$0 start | stop"
}

COMMAND=${1}

case "${COMMAND}" in
start)
     start
     ;;
stop)
     stop
     ;;
*)
     usage
     ;;
esac
     
     
